import pandas as pd

from gravity_model import *


def check_if_multiple_stores_per_cell(all_stores, selected_stores):
    # First we need to get all cells in which there are two stores:
    flow = pd.read_pickle("./Output_Flow/flow.pkl")

    selected_flow = flow[flow.index.isin(selected_stores.Gitter_ID_)]
    print(selected_flow)

    only_multiple = all_stores[all_stores["Markets_Count"] > 1]
    count = only_multiple.count()
    print(
        count
    )  # The result is 27, meaning that there are 27 cells in which there are more than 2 supermarkets

    # Now we need to check whether one of the stores of the selected chain are in a cell with multiple retailers.
    selected_stores_with_multiple = selected_stores.merge(
        only_multiple, on="Gitter_ID_", how="left",
    )

    # selected_stores_with_multiple = selected_stores_with_multiple[
    #     "Name", "Address", "Zip", "Type", "TotalSales"
    # ]

    print(selected_stores_with_multiple)
    # TotalSales is the important columns


def get_stores(chain_name):
    all_stores = import_shop_data()
    selected_stores = all_stores[all_stores["Name"] == chain_name]
    return selected_stores


stores_Aldi = get_stores("Aldi")

all_stores = get_production_potential()
check_if_multiple_stores_per_cell(all_stores, stores_Aldi)


# get a list of all chain names and their stores count:
print(import_shop_data().groupby(["Name"]).agg({"ID": "count", "TotalSales": "sum"}))


# print(shops_data.groupby(["Gitter_ID_"])
# print(only_multiple.head())
